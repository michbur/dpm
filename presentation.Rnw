\documentclass{beamer}
\usetheme{focus}
\usepackage[utf8]{inputenc}
\usepackage{polski}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}
\usepackage{url}
\usepackage{ulem}

\newcommand\Fontvi{\fontsize{6}{7.2}\selectfont}

\newcommand{\btVFill}{\vskip0pt plus 1filll}

\title{Alfabet życia: n-gramowa analiza białek}
\date{}
\author{Michał Burdukiewicz}
\institute{MI$^2$ Data Lab, Politechnika Warszawska \\
}

\begin{document}

  <<knitrIntro, echo = FALSE, message=FALSE,warning=FALSE>>=
source("my_ggplot_theme.R")

library(dplyr)
library(reshape2)
library(xtable)
library(biogram)
library(seqinr)
library(VennDiagram)
  
source("script.R")  

print_bt <- function(x) {
  rws <- 0L:(nrow(x) - 1)
  col <- c("\\rowcolor{green!10}", "\\rowcolor{blue!10}", "\\rowcolor{red!10}", "\\rowcolor{yellow!10}")
  print(xtable(x, digits = 0), booktabs = TRUE,
        add.to.row = list(pos = as.list(rws), command = col),
        print.results = FALSE)
}

print_bt2 <- function(x) {
  rws <- seq(1, nrow(x) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  print(xtable(x, digits = 0), booktabs = TRUE,
        add.to.row = list(pos = as.list(rws), command = col),
        print.results = FALSE, include.rownames = FALSE)
}  
  
cls <- c("\\colorbox{green!10}", "\\colorbox{blue!10}", "\\colorbox{red!10}", "\\colorbox{yellow!10}")

group2df <- function(group_list, caption = NULL, label = NULL) {
  tab <- data.frame(Groups = sapply(group_list, function(i)
    paste0(toupper(sort(i)), collapse = ", ")))
  tab <- cbind(ID = 1L:nrow(tab), tab)
  rws <- seq(1, nrow(tab) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  colnames(tab) <- c("Subgroup ID", "Amino acids")
  res <- print(xtable(tab, caption = caption, label = label), 
               include.rownames = FALSE, booktabs = TRUE,
               add.to.row = list(pos = as.list(rws), command = col), print.results = FALSE, 
               caption.placement = "top", sanitize.text.function = identity, 
               sanitize.rownames.function = identity)
  #res
  print(xtable(tab))
}  
  
amyloids_plot <- read.csv("amyloid_plot_data.csv")

levels(amyloids_plot[["et"]]) <- c("Best-performing simplified alphabet", 
                                   "simplified alphabet", "Full alphabet", 
                                   "Standard simplified alphabet")


amyloids_plot[["len_range"]] <- factor(amyloids_plot[["len_range"]], 
                                       levels = c("Test peptide length: 6 ", "Test peptide length: 7-10", 
                                                  "Test peptide length: 11-15", "Test peptide length: 16-25"))

subdat <- filter(amyloids_plot, pos == "Training peptide length: 6")

best_enc <- list(c("G"), 
                 c("K", "P", "R"),
                 c("I", "L", "V"),
                 c("F", "W", "Y"),
                 c("A", "C", "H", "M"),
                 c("D", "E", "N", "Q", "S", "T"))
names(best_enc) <- 1L:6


@
  

\maketitle

\begin{frame}{Bioinformatyka}

nauka zajmująca się stosowaniem narzędzi matematycznych oraz informatycznych do rozwiązywania problemów biologicznych

\end{frame} 

\begin{frame}{Cel}

Zastosowanie metod uczenia maszynowego do przewidywania właściwości białek.

\end{frame} 


\begin{frame}{Plan prezentacji}

\tableofcontents

\end{frame} 

\section{Aminokwasy i białka}

\begin{frame}{Aminokwasy}

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/aa1.png}
\end{figure}

Źródło: \url{byjus.com}

\end{frame}

\begin{frame}{Aminokwasy}

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/aa1.png}
\end{figure}

Źródło: \url{byjus.com}

\end{frame}

\begin{frame}{Aminokwasy}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aa2.jpg}
\end{figure}

Źródło: \url{microbenotes.com}

\end{frame}

\begin{frame}{Aminokwasy}

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.5,results='asis'>>=
library(biogram)
library(reshape2)

dat <- aaprop[c("ARGP820101", "DAWD720101", "EISD840101", "GOLD730102"), ]
melt(dat) %>% 
  mutate(Var2 = toupper(Var2)) %>% 
  ggplot(aes(x = Var2, y = Var1, fill = value)) +
  geom_tile(color = "black") +
  scale_x_discrete("Aminokwas")+
  scale_y_discrete("Cecha") +
  scale_fill_gradient("Znormalizowana wartość",
                      low = "#f7fcb9", high = "#31a354") +
  my_theme

@

\end{frame} 

\begin{frame}{Białka}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminokwasy.eps}
\end{figure}

\end{frame} 


\begin{frame}{Białka}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminokwasy2.eps}
\end{figure}

\end{frame} 

\begin{frame}{Białka}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminokwasy2.eps}
\end{figure}

Struktura wyższych rzędów określa funkcję białka.

\end{frame} 

\begin{frame}{Ludzki proteom}

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.5,results='asis'>>=
library(waffle)

parts <- data.frame(
  names = c("Nieznana funkcja", "Znana funkcja"),
  vals = c(1937/100, (20230 - 1937)/100)
)

waffle(
  setNames(c(1937/100, (20230 - 1937)/100), 
           c("Nieznana funkcja", "Znana funkcja")), 
  rows = 8, size = 1, 
  colors = c("black", "#1879bf"), legend_pos = "bottom"
)

@

1937 ludzkich białek ma nieznaną funkcję (dark proteome) (Young-Ki Paik et al., 2018).

\end{frame} 



\begin{frame}{Cel} 

Zastosowanie metod uczenia maszynowego do przewidywania właściwości białek \textbf{na podstawie ich struktury pierwszorzędowej}.


\end{frame}   

\section{n-gramy i uproszczone alfabety}

\begin{frame}
n-gramy (k-tuple, k-mery):
\begin{itemize}
\item podsekwencje (ciągłe lub z przerwami) $n$ reszt aminokwasowych lub nukleotydowych,
\item bardziej informatywne niż pojedyncze reszty.
\end{itemize}
\end{frame}  

\begin{frame}

<<echo = FALSE, message=FALSE,warning=FALSE>>=

seq1 <- c("f", "k", "v", "w", "p", "d", "h", "g", "s", "g")
seq2 <- c("y", "m", "c", "i", "y", "r", "a", "q", "t", "n")

sample_seq <- matrix(toupper(c(seq1, seq2)), ncol = 10, byrow = TRUE)

generate_ngrams <- function(x) 
  decode_ngrams(x) %>% 
  gsub("_", "-", x = .) %>% 
  paste0(paste0('\\textcolor{',  colors, '}{\\texttt{'), .) %>% 
  paste0(., "}}") %>% 
  .[1L:4] %>% 
  paste0(collapse = ", ") 

colors <- c("red", "blue")

przyklady <- list(seq2ngrams(sample_seq, 1, aa_v, d = 0), 
                  seq2ngrams(sample_seq, 2, aa_v, d = 0), 
                  seq2ngrams(sample_seq, 2, aa_v, d = 1), 
                  seq2ngrams(sample_seq, 3, aa_v, d = c(2, 0)))

colored_ngrams <- lapply(przyklady, generate_ngrams) 


@

Peptyd I: \textcolor{red}{\texttt{\Sexpr{toupper(paste0(seq1, collapse = ""))}}}

Peptyd II: \textcolor{blue}{\texttt{\Sexpr{toupper(paste0(seq2, collapse = ""))}}}

\medskip

Przykłady n-gramów uzyskanych z peptydów I i II:

\begin{enumerate}
    \item 1-gramy: \Sexpr{colored_ngrams[[1]]},
    \item 2-gramy: \Sexpr{colored_ngrams[[2]]},
    \item 2-gramy (nieciągłe): \Sexpr{colored_ngrams[[3]]},
    \item 3-gramy (nieciągłe): \Sexpr{colored_ngrams[[4]]}.
\end{enumerate}

\end{frame}



\begin{frame}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
L <- 1
m <- 20 
m2 <- 6
n <- 1:5
n_max <- L*m^n
n_max2 <- L*m2^n
#dat <- data.frame(n = c(n, n), n_max = c(n_max, n_max2), m = c(rep(m, 5), rep(m2, 5)))
dat <- data.frame(n = n, n_max = n_max, m = rep(m, 5))
dat[["m"]] <- factor(dat[["m"]])

ggplot(dat, aes(x = n, y = n_max, color = m, label = formatC(n_max, digits = 4))) + 
  geom_line(linetype="dotted", size=1.5) + 
  geom_point(size=4, shape=16) +
  geom_text(size = 4, vjust = -1.5, hjust = "inward", color = "red") +
  coord_cartesian(ylim = c(1, 4.5e7)) +
  scale_x_continuous("Długość ciągłego n-gramu (n)", breaks = 0L:5) +
  scale_y_continuous("Liczba potencjalnych n-gramów (skala logarytmiczna)",
                     trans = "log10") +
  scale_color_discrete("Rozmiar alfabetu") +
  my_theme
@

Dłuższe n-gramy są bardziej informatywne, ale tworzą większe przestrzenie atrybutów, które są trudniejsze do analizy.

\end{frame}

\begin{frame}{QuiPT}  

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.6,results='asis'>>=
load("data/times2.RData")

times_dat <- do.call(rbind, lapply(times, function(i) 
  t(sapply(i, function(j) {
    c(slow = unname(j[["slow"]]["elapsed"]),
      quick = unname(j[["quick"]]["elapsed"]))
  }))
)) %>% 
  data.frame %>% 
  mutate(size = sort(rep(1L:5*10, 10))) %>% 
  melt(id.vars = "size") %>% 
  group_by(size, variable) %>% 
  summarise(value = mean(value)) %>% 
  ungroup %>% 
  mutate(variable = factor(variable, labels = c("Test permutacyjny", "QuiPT")))

ggplot(times_dat, aes(x = size, y = value, color = variable)) +
  geom_point(size = 4) +
  geom_line(linetype = "dotted") +
  scale_y_continuous("Czas [s]") +
  scale_x_continuous("Liczba testowanych n-gramów") +
  scale_color_manual("Test", values = c("red", "blue")) +
  my_theme
@

QuiPT (dostępny jako funkcja w pakiecie \textbf{biogram}) jest szybszy niż klasyczne testy permutacyjne.
\end{frame}

\begin{frame}{Uproszczone alfabety}
Uproszczone alfabety:
\begin{itemize}
\item aminokwasy są grupowane w większe zbiory na podstawie 
określonych kryteriów,
\item łatwiejsze przewidywanie struktur~\citep{murphy_simplified_2000},
\item tworzenie bardziej uogólnionych modeli.
\end{itemize}
\end{frame}


\begin{frame}{Uproszczone alfabety}
Poniższe peptydy wydają się być całkowicie różne pod względem składu aminokwasowego.

Peptyd I: 

\texttt{\Sexpr{toupper(paste0(seq1, collapse = ""))}}

\medskip

Peptyd II: 

\texttt{\Sexpr{toupper(paste0(seq2, collapse = ""))}}

\end{frame}  


\begin{frame}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
seq_dat <- rbind(data.frame(seq = "Sekwencja I", pos = 1L:10, 
                            aa = seq1, val = aaprop["ARGP820101", seq1]),
                 data.frame(seq = "Sekwencja II", pos = 1L:10, 
                            aa = seq2, val = aaprop["ARGP820101", seq2])) %>% 
  mutate(hydroph = val < 0.4)

ggplot(seq_dat, aes(x = factor(pos), y = val, label = toupper(aa), 
                    group = seq, colour = hydroph)) +
  geom_text(vjust = "outward", size = 4.8, show_guide = FALSE, fontface = "bold") +
  #geom_point(size = 0) +
  geom_line(linetype = "dotted", color = "black") +
  facet_wrap(~ seq, ncol = 1) +
  scale_x_discrete("Pozycja") +
  scale_y_continuous("Hydrofobowość (Argos et al., 1982)", expand = c(.1, .1)) +
  scale_color_manual(values = c("green", "orange")) +
  #guides(colour = guide_legend(override.aes = list(size=4))) +
  my_theme 
@

\end{frame}  

\begin{frame}
\begin{table}
\begin{tabular}{cl}
\toprule
Grupa & Aminokwasy \\ 
\midrule
 \textcolor{green}{1} & \textcolor{green}{C, I, L, K, M, F, P, W, Y, V} \\ 
 \textcolor{orange}{2} & \textcolor{orange}{A, D, E, G, H, N, Q, R, S, T} \\ 
\bottomrule
\end{tabular}
\end{table}

\begin{columns}
\begin{column}{0.15\textwidth}
 
Peptyd I: 

Peptyd II: 

\end{column}
\begin{column}{0.1\textwidth}

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(seq1[1L:5], collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(seq1[6L:10], collapse = ""))}}} 

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(seq2[1L:5], collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(seq2[6L:10], collapse = ""))}}} 

\end{column}
\begin{column}{0.02\textwidth}  %%<--- here

\textrightarrow

\textrightarrow
\end{column}
\begin{column}{0.1\textwidth}  %%<--- here

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(rep(1, 5), collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(rep(2, 5), collapse = ""))}}}

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(rep(1, 5), collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(rep(2, 5), collapse = ""))}}}
\end{column}
\end{columns}
\end{frame}  

\begin{frame}{Cel} 

Zastosowanie metod uczenia maszynowego do przewidywania właściwości białek na podstawie ich struktury pierwszorzędowej \textbf{zakodowanej w postaci n-gramów zapisanych w uproszczonym alfabecie}.

\end{frame}   

\section{Przewidywanie amyloidów}

\begin{frame}{Białka amyloidowe}

Agregaty białek amyloidowe występują w tkankach osób cierpiących na zaburzenia 
neurodegeneracyjne, takie jak choroba Alzheimera i Parkinsona, a także wiele innych 
schorzeń.

\begin{figure} 
\includegraphics[width=0.61\textwidth]{static_figure/amyloid_aggregates.jpg}
\end{figure}

\footnotesize
Agregaty amyloidowe (czerwone) wokół neuronów (zielone). Strittmatter Laboratory, Yale University.

\end{frame}  

  
\begin{frame}{Białka amyloidowe}

Za agregację białek amyloidogennych odpowiedzialne są sekwencje peptydowe o właściwościach amyloidogennych (hot spots):

\begin{itemize}
\item krótkie (6-15 aminokwasów),
\item bardzo zmienny, zazwyczaj hydrofobowy skład aminokwasowy,
\item tworzą unikalne $\beta$-struktury.
\end{itemize}

\begin{figure} 
\includegraphics[width=0.9\textwidth]{static_figure/zipper_structure.jpg}
\end{figure}

\footnotesize\citet{sawaya_atomic_2007}
\end{frame}


\begin{frame}{Cel} 

Zastosowanie metod uczenia maszynowego do przewidywania \sout{właściwości} \textbf{amyloidogenności} białek na podstawie ich struktury pierwszorzędowej zakodowanej w postaci n-gramów zapisanych w uproszczonym alfabecie.

\end{frame}  

\begin{frame}{AmyloGram}
AmyloGram: oparte na analizie n-gramowej narzędzie do przewidywania amyloidów~\citep{burdukiewicz_prediction_2016, BurdukiewiczAmyloidogenicmotifsrevealed2017a}.
\end{frame}


\begin{frame}

\vspace{2cm}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram1.eps}
\end{figure}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}

  \end{frame}


\begin{frame}{Drzewo decyzyjne}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{figures/tree1.eps}
\end{figure}

\end{frame}

\begin{frame}{Drzewo decyzyjne}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{figures/tree2.eps}
\end{figure}

\end{frame}
  
\begin{frame}{Lasy losowe}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{figures/rf.eps}
\end{figure}

\end{frame}

\begin{frame}{Walidacja krzyżowa}

\begin{figure} 
\includegraphics[width=0.35\textwidth]{figures/cv.eps}
\end{figure}

\end{frame}

\begin{frame}{Walidacja krzyżowa}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

levels(subdat[["len_range"]]) <- c("Zbiór testowy (peptydy o długości 6)", 
                                   "Zbiór testowy (peptydy o długości 7-10)", 
                                   "Zbiór testowy (peptydy o długości 11-15)", 
                                   "Zbiór testowy (peptydy o długości 16-25)")

levels(subdat[["et"]]) <-  c("Najlepszy uproszczony alfabet", "Uproszczony alfabet", 
                             "Pełny alfabet", "Standardowy uproszczony alfabet")

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 3, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et == "Pełny alfabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()

@
%AUC (Area Under the Curve) measures the performance of a classifier (1 - classifier always properly recognizes amyloid proteins, 0 - classifier never properly recognizes amyloid proteins).

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}

\end{frame}

\begin{frame}{Standardowe uproszczone alfabety}
Czy standardowe uproszczone alfabety opracowane dla różnych zagadnień biologicznych pomagają lepiej przewidywać amyloidy?
\end{frame}

% \begin{frame}{Standardowe uproszczone alfabety}
% Opublikowano kilka uproszczonych alfabetów, które w założeniu miały służyć do opisywania struktur drugo- i trzeciorzędowych białek~\citep{kosiol_new_2004, melo_accuracy_2006}.
%   \end{frame}
  
    \begin{frame}{Standardowe uproszczone alfabety}
\vspace{2cm}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram2.eps}
\end{figure}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}

  \end{frame}


    \begin{frame}{Walidacja krzyżowa}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 3, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et %in% c("Pełny alfabet", "Standardowy uproszczony alfabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3L:4], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3L:4], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()

@

Standardowe alfabety aminokwasowe nie poprawiają jakości predykcji amyloidów.
  
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}  
  \end{frame}


\begin{frame}{Nowe uproszczone alfabety}

\begin{itemize}
\item 17 miar fizykochemicznych wybranych z bazy AAIndex: 
  \begin{itemize}
    \item rozmiar, 
    \item hydrofobowość, 
    \item częstość w $\beta$-kartkach,
    \item zdolność do tworzenia kontaktów.
  \end{itemize}
  \item 524 284 uproszczonych alfabetów aminokwasowych o różnej wielkości (od 3 do 6 grup).
  \end{itemize}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
    \end{frame}
  
    \begin{frame}{Nowe uproszczone alfabety}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram3.eps}
\end{figure}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
  \end{frame}



\begin{frame}{Walidacja krzyżowa}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
subdat2 <- droplevels(filter(subdat, et != "Najlepszy uproszczony alfabet"))

ggplot(subdat2, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 3, color = "black", fill = "white") +
  geom_point(data = filter(subdat2, et %in% c("Pełny alfabet", "Standardowy uproszczony alfabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[2L:4], drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[2L:4], drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()

@
%  \small
%Hinges of boxes correspond to 
%the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
%gray circles correspond to the simplified alphabets with the AUC outside the 0.95 
%confidence interval.
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
  
\end{frame}


\begin{frame}{Wybór najlepszego alfabetu}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

set.seed(3)
exdat <- data.frame(
  alph = paste0("A", 1L:5), 
  c1 = 0.7 + runif(5)/5,
  c2 = 0.75 + runif(5)/5,
  c3 = 0.65 + runif(5)/5
) %>% 
  melt %>% 
  group_by(variable) %>% 
  mutate(r = rank(value)) %>% 
  ungroup

best_alph <- group_by(exdat, alph) %>%
  summarise(cr = sum(r)) %>%
  arrange(desc(cr)) %>% 
  slice(1) %>% 
  select(alph) %>% 
  unlist %>% 
  as.character

exdat <- mutate(exdat, best = ifelse(alph == best_alph, "tak", "nie"))

ggplot(exdat, aes(y = variable, x = value, color = alph)) +
  geom_point(size = 7) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Kategoria", labels = paste0("Kategoria ", 1L:3)) +
  scale_color_discrete("Alfabet") +
  my_theme

@
\end{frame}


\begin{frame}{Wybór najlepszego alfabetu}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(exdat, aes(y = variable, x = value, color = alph, label = (r - 6)*-1)) +
  geom_text(size = 7) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Kategoria", labels = paste0("Kategoria ", 1L:3)) +
  scale_color_discrete("Alfabet") +
  scale_shape_discrete("Najlepszy uproszczony alfabet") +
  my_theme


@
Dla każdej kategorii alfabety zostały porangowane (ranga 1 dla najlepszego AUC itd.). 

\end{frame}

\begin{frame}{Wybór najlepszego alfabetu}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(exdat, aes(y = variable, x = value, color = alph, shape = best)) +
  geom_point(size = 7) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Kategoria", labels = paste0("Kategoria ", 1L:3)) +
  scale_color_discrete("Alfabet") +
  scale_shape_discrete("Najlepszy uproszczony alfabet") +
  my_theme +
  theme(legend.box = "vertical")


@
Za najlepszy alfabet uznano alfabet z najmniejszą sumą rang.

\end{frame}


  
\begin{frame}{Najlepszy uproszczony alfabet}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 3) +
  geom_point(data = filter(subdat, et != "Uproszczony alfabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Zbiór treningowy (peptydy o długości 6)") + 
  my_theme + 
  coord_flip()
@
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
\end{frame}

\begin{frame}{Najlepszy uproszczony alfabet}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
# cat(group2df(best_enc, caption = "The best-performing simplified alphabet."))
@
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Grupa & Aminokwasy \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   \btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
   \end{frame}

     \begin{frame}{Najlepszy uproszczony alfabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Grupa & Aminokwasy \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
   \rowcolor{blue!20} 3 & I, L, V \\ 
   \rowcolor{blue!20}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Grupy 3 i 4 - aminokwasy hydrofobowe.  
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
   \end{frame}
  
  
     \begin{frame}{Najlepszy uproszczony alfabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Grupa & Aminokwasy \\ 
  \midrule
  1 & G \\ 
   \rowcolor{red!20}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Grupa 2 - reszty aminokwasowe zakłócające $\beta$-struktury.  
   \btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
   \end{frame}  


\begin{frame}{Podobieństwo alfabetów i jakość predykcji}
Czy alfabety podobne do najlepszego uproszczonego alfabetu również wspierają przewidywania amyloidów?
\end{frame}

\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=4,warning=FALSE>>=
si_dat <- read.csv2("si_dat.csv")

levels(si_dat[["et"]]) <- c("Najlepszy uproszczony alfabet", "Uproszczony alfabet", 
                             "Pełny alfabet", "Standardowy uproszczony alfabet", 
                            "Standardowy uproszczony alfabet")


simil_plot <- ggplot(si_dat, aes(x=si, y=AUC_mean)) + 
  # geom_point(data = si_dat, 
  #            aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  #geom_density_2d(color = "black", contour = TRUE) +
    geom_bin2d(bins = 30) +
  # stat_density2d(aes(fill=..level..), color = "black",
  #                contour = TRUE, geom = "polygon", alpha = 0.5, binwidth = 50, bins = 10) +
  scale_fill_continuous("Liczba alfabetów", low = "gold", high = "goldenrod4") +
  xlab("Similarity index") +
  ylab("AUC") +
  my_theme +
  geom_point(data = droplevels(filter(si_dat, et != "Uproszczony alfabet")),
             aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2), 
         fill = guide_colorbar(barwidth = unit(5, "line"))) +
  scale_shape_manual("", values = c(16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "green", "blue"), drop = FALSE) +
  theme(panel.grid.major = element_line(color = "lightgrey", size = 0.5)) 

print(simil_plot)
@
Similarity index~\citep{stephenson_unearthing_2013} mierzy podobieństwo między dwoma uproszczonymi alfabetami (1:~identyczne alfabety, 0:~zupełnie niepodobne alfabety).

\end{frame}



\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=4,warning=FALSE>>=
print(simil_plot)
@
Korelacja między similarity index i średnim AUC jest istotna ($\textrm{p-value} \leq 2.2^{-16}$; $\rho = 0.51$).

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
\end{frame}

\begin{frame}{}
Czy informatywne n-gramy znalezione przez QuiPT są związane z amyloidogennością?
\end{frame}


\begin{frame}{Informatywne n-gramy}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=3.5,warning=FALSE>>=
ngram_freq <- read.csv("ngram_freq.csv")

ngram_freq_plot <- mutate(ngram_freq, decoded_name = gsub("_", "-", decoded_name)) %>%
  mutate(decoded_name = factor(decoded_name, levels = as.character(decoded_name)),
         amyloid = diff_freq > 0) %>%
  melt() %>%
  filter(variable %in% c("pos", "neg"),
         association != "Not found") %>%
  droplevels %>%
  mutate(variable = factor(variable, labels = c("Amyloid", "Nieamyloid")),
         association = factor(association, levels = c("Amyloidogenny", "Nieamyloidogenny")))

select(ngram_freq_plot, -association) %>% 
  dcast(decoded_name ~ variable) %>% 
  mutate(log_odd = log(Amyloid/Nieamyloid)) %>% 
  ggplot(aes(x = decoded_name, y = log_odd)) +
  geom_col() +
  scale_y_continuous("Logarytm ilorazu szans (Log odds ratio)") +
  scale_x_discrete("") +
  my_theme  

@

Spośród 65 najbardziej informatywnych n-gramów, 15 (23\%) jest również obecnych w motywach aminokwasowych znalezionych ekperymentalnie~\citep{paz_sequence_2004}.

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
\end{frame}


\begin{frame}{Porównanie z innymi narzędziami}

\begin{table}[ht]
\centering

\begin{tabular}{ccccc}
  \toprule
Program & AUC & MCC \\ 
  \midrule
AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
  \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
   FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
  \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
   \bottomrule
\end{tabular}
\end{table}

Klasyfikator wytrenowany z wykorzystaniem najlepszego uproszczonego alfabetu, AmyloGram, został porównany z innymi narzędziami do przewidywania amyloidów z użyciem zewnętrznego zbioru danych \textit{pep424}.
\btVFill
\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}


\end{frame}

% \begin{frame}{Benchmark results}
% 
% \begin{table}[ht]
% \centering
% 
% \begin{tabular}{ccccc}
%   \toprule
% Classifier & AUC & MCC \\ 
%   \midrule
% AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
%   \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
%    FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
%   \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
%    \bottomrule
% \end{tabular}
% \end{table}
% 
% MCC (Matthew's Correlation Coefficient) measures the performance of a classifier (1 - classifier always properly recognizes amyloid proteins, -1 - classifier never properly recognizes amyloid proteins).
% 
% \end{frame}

\section{Badania eksperymentalne}

\begin{frame}{Walidacja eksperymentalna}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/FalsePositives.eps}
\end{figure}
\end{frame}

\begin{frame}{Walidacja eksperymentalna}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ExperimentalValidation.eps}
\end{figure}
\end{frame}

\begin{frame}{Nowe białko amyloidowe}

\includegraphics[width=0.75\textwidth]{static_figure/line.jpg}

Nowy amyloid funkcjonalny produkowany przez Methanospirillum sp. \citep{10.3389/fmicb.2018.02729} został wybrany do analiz \textit{in vitro} dzięki wskazaniom AmyloGramu.

\end{frame}

\begin{frame}{Podsumowanie}

Modele przewidujące właściwości białek mogą opierać się na regułach precyzyjnych zrozumiałych dla biologów i weryfikowalnych eksperymentalnie nie tracąc na swojej skuteczności.

\end{frame}

% \begin{frame}{Podsumowanie}
% \begin{figure} 
% \includegraphics[width=0.75\textwidth]{static_figure/r1.png}
% \includegraphics[width=0.75\textwidth]{static_figure/r2.png}
% \end{figure}
% \end{frame}


\begin{frame}{Podziękowania}
Mentorzy:
\begin{itemize}
\item Paweł Mackiewicz (Uniwersytet Wrocławski).
\item Małgorzata Kotulska (Politechnika Wrocławska).
\item Stefan Rödiger (Brandenburg University of Technology Cottbus-Senftenberg).
\item Henrik Nielsen (Technical University of Denmark).
\item Lars Kaderali (University of Greifswald).
\item Jarosław Chilimoniuk (Uniwersytet Wrocławski).
\item Piotr Sobczyk (Politechnika Wrocławska).
\end{itemize}
\end{frame}


\begin{frame}{Podziękowania}
Finansowanie:
\begin{itemize}
\item Narodowe Centrum Nauki (2015/17/N/NZ2/01845 i 2017/24/T/NZ2/00003).
\item COST ACTION CA15110 (Harmonising standardisation strategies to increase efficiency and competitiveness of European life-science research).
\item KNOW Wrocław Center for Biotechnology.
\item Ministerstwo Edukacji i Badań Naukowych Niemiec (InnoProfile-Transfer-Projekt 03IPT611X).
\end{itemize}

\end{frame}

\begin{frame}{MI$^2$ Data Lab}

MI$^2$ Data Lab (\url{https://mi2.mini.pw.edu.pl/}), Wydział Matematyki i Nauk Informatycznych, Politechnika Warszawska.

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/mi2.png}
\end{figure}

Kontakt: \url{michalburdukiewicz@gmail.com}.

\end{frame}

\begin{frame}[allowframebreaks]
        \frametitle{References}
  \bibliographystyle{apalike}
  \bibliography{references}
\end{frame}  


\end{document}